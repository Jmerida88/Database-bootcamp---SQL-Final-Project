-- FINAL PROJECT - JORGE MERIDA

-- PART 1 
-- TASK 1
-- WRITE A QUERY THAT SHOWS BANDS AND THEIR RESPECTIVE ALBUMS RELEASE DATE IN DESC ORDER

SELECT B.BANDNAME, A.RELEASEDATE 
FROM ALBUM A 
JOIN BAND B ON A.IDBAND = B.IDBAND
ORDER BY A.RELEASEDATE DESC;

-- TASK 2 
-- WRITE A QUERY THAT SHOWS ALL OF THE PLAYERS THAT USE DRUMS, ALONG WITH THE BANDS THAT THEY ARE A PART OF. HAVE ON COLUMN THAT SHOWS FULLNAME

SELECT I.INSTRUMENT, CONCAT(P.PFNAME,' ', P.PLNAME) AS PLAYERNAME, B.BANDNAME
FROM PLAYER P 
JOIN instrument I ON P.INSTID = I.INSTID
JOIN BAND B ON P.IDBAND = B.IDBAND
WHERE I.INSTRUMENT = 'DRUMS'

-- TASK 3
-- WRITE A QUERY THAT BEST DESCRIBES THE NUMBER OF INSTRUMENTS USED BY EACH BAND. (HINT SOME BANDS MAY HAVE MULTIPLE PLAYERS USING THE SAME INSTRUMENT)

-- CORRECT ANSWER!!!!
SELECT B.BANDNAME, COUNT(DISTINCT P.INSTID) AS 'TOTAL INSTRUMENT'
FROM BAND B
INNER JOIN PLAYER P ON P.IDBAND = B.IDBAND
GROUP BY B.BANDNAME;

-- MY TRIAL AND ERROR:
/*SELECT B.BANDNAME, I.INSTRUMENT, COUNT(I.INSTRUMENT) AS 'TOTAL INSTRUMENTS'
FROM BAND B  
LEFT JOIN PLAYER P ON B.IDBAND = P.IDBAND
LEFT JOIN INSTRUMENT I ON P.INSTID = I.INSTID
GROUP BY B.BANDNAME, I.INSTRUMENT
ORDER BY B.BANDNAME, COUNT(I.INSTRUMENT) DESC;

SELECT B.BANDNAME, I.INSTRUMENT, COUNT(I.INSTRUMENT) AS 'TOTAL INSTRUMENTS'
FROM BAND B  
LEFT JOIN ( 
SELECT * FROM PLAYER
UNION ALL
SELECT * FROM PLAYER WHERE IDBAND = 4) P ON B.IDBAND = P.IDBAND
-- LEFT JOIN PLAYER P ON B.IDBAND = P.IDBAND
LEFT JOIN INSTRUMENT I ON P.INSTID = I.INSTID
GROUP BY B.BANDNAME, I.INSTRUMENT
ORDER BY B.BANDNAME, COUNT(I.INSTRUMENT) DESC; */ 

-- TASK 4 
-- WRITE A QUERY THAT LISTS THE MOST POPULAR INSTRUMENT AMONST THE PLAYERS

SELECT I.INSTRUMENT, COUNT(P.INSTID)
FROM INSTRUMENT I 
INNER JOIN PLAYER P ON I.INSTID = P.INSTID
GROUP BY I.INSTRUMENT 
ORDER BY COUNT(P.INSTID) DESC

-- TASK 5 

-- WRITE A QUERY THAT LISTS ANY ALBUMS THAT HAVE A MISSING NAME AND/OR MISSING RELEASE DATES

SELECT ALBUMNAME, RELEASEDATE
FROM ALBUM 
WHERE ALBUMNAME IS NULL
OR RELEASEDATE IS NULL;

-- PART 2 TASK 1

-- WE NEED TO  ADD MORE BANDS TO THE BAND TABLE. HERE'S A LIST OF THE BANDS WE'D LIKE TO ADD:

INSERT INTO BAND (IDBAND,AID, BANDNAME) 
		VALUES (22,1,'WEEZER'), 
			  (23,1,'TLC'), 
              (24,1,'PARAMORE'), 
              (25,1,'BLACKPINK'), 
              (26,1,'VAMPIRE WEEKEND')
              
 -- TASK 2 
 -- WHICH TABLE WOULD WE USE TO ADD THE NAMES OF BAND MEMBERS?
 
 -- ANSWER: PLAYER TABLE
 -- TASK 3 
 
 SELECT * FROM PLAYER;
 
 INSERT INTO PLAYER(IDPLAYER,INSTID,IDBAND,PFNAME,PLNAME,HOMECITY,HOMESTATE)
		VALUES(30,3,22,'RIVERS','CUOMO','ROCHESTER','NEW YORK'),
			  (31,1,22,'BRIAN','BELL','IOWA CITY','IOWA'),
              (32,4,22,'PATRICK','WILSON','BUFFALO','NEW YORK'),
              (33,2,22,'SCOTT','SHRINER','TOLEDO','OHIO'),
              (34,3,23,'TIONNE','WATKINS','DES MOINES','IOWA'),
              (35,3,23,'ROZONDA','THOMAS','COLUMBUS','GEORGIA'),
			  (36,3,24,'HAYLEY','WILLIAMS','FRANKLIN','TENNESSEE'),
			  (37,1,24,'TAYLOR','YORK','NASHVILLE','TENNESSEE'),
			  (38,4,24,'ZAC','FARRO','VORHEES TOWNSHIP','NEW JERSEY'),
			  (39,3,25,'JISOO','KIM','','SOUTH KOREA'),
              (40,3,25,'JENNIE','KIM','','SOUTH KOREA'),
              (41,3,25,'ROSEANNE','PARK','','NEW ZEALAND'),
              (42,3,25,'LISA','MANOBAN','','THAILAND'),
              (43,3,26,'EZRA','KOENIG','NEW YORK','NEW YORK'),
              (44,2,26,'CHRIS','BAIO','BRONXVILLE','NEW YORK'),
              (45,4,26,'CHRIS','TOMSON','UPPER FREEHOLD TOWNSHIP','NEW JERSEY')
              
select * from player
-- TASK 4 

-- A NEW VENUE SHOULD BE ADDED TO THE VENUE TABLE

INSERT INTO VENUE(IDVENUE,VNAME,CITY,STATE,ZIPCODE,SEATS)
		VALUES(12,'TWIN CITY ROCK HOUSE','MINNEAPOLIS','MN','55414','2000')

SELECT * FROM VENUE

-- TASK 5

-- WHICH STATE HAS THE LARGEST AMOUNT OF SEATING AVAILABLE REGARDLESS OF NUMBER OF VENUES AT THE STATE (HINT DETERMINE THE TOTAL NUMBER OF SEATS FOR EACH STATE)

SELECT STATE, SUM(SEATS)
FROM VENUE
GROUP BY STATE 
ORDER BY SUM(SEATS) DESC

-- PART 3, TASK 1

-- WE NEED TO SOME DATA ON UPCOMING PERFORMANCES FOR SOME OF THE ARTISTS. WHICH TABLE SHOULD WE USE TO ADD THIS INFORMATION

SELECT B.BANDNAME, G.GIGDATE, V.VNAME
FROM GIG G
JOIN BAND B ON G.IDBAND = B.IDBAND
JOIN VENUE V ON G.IDVENUE = V.IDVENUE

INSERT INTO GIG (GIGID,IDVENUE,IDBAND,GIGDATE,NUMATTENDEES)

-- TASK 2

-- USING THE TABLE FROM TASK 1 ADD THE FOLLOWING

INSERT INTO GIG(GIGID,IDVENUE,IDBAND,GIGDATE,NUMATTENDEES)
			VALUES(1,4,2,'2022-05-05',19000),
				(2,12,26,'2022-04-15',0),
                (3,8,23,'2022-06-07',18000),
                (4,2,22,'2022-07-03',175)
            
            
            SELECT * FROM VENUE
            SELECT * FROM BAND
            select * from gig
 -- TASK 3 
 -- ARE ANY OF THE VENUES OVERSOLD?
 
            SELECT V.VNAME, V.SEATS, G.NUMATTENDEES
            FROM VENUE V 
            JOIN GIG G ON V.IDVENUE = G.IDVENUE

-- TASK 4
-- WE JUST GOT WORD THAT VAMPIRE WEEKEND CAN EXPECT 1,750 GUESTS. WRITE A QUERY TO UPDATE THE TABLE ACCORDINGLY

UPDATE GIG
SET NUMATTENDEES = '1750'
WHERE GIGID = 2

SELECT * FROM GIG G
JOIN BAND B ON G.IDBAND = B.IDBAND

-- TASK 5 
-- WE JUST GOT AN UPDATE THAT THE NUMBER OF ATTENDESS AT THE RIVER CLUB FOR WEEZER WILL ONLY HAVE 125 GUESTS. WRITE A QUERE TO UPDATE THE TABLE ACCORDINGLY

UPDATE GIG
SET NUMATTENDEES = '125'
WHERE GIGID = 4

SELECT * FROM GIG G
JOIN BAND B ON G.IDBAND = B.IDBAND

-- TASK 6 
/* CREATE A VIEW (CALLED vw_giginfo) THAT WILL SHOW BAND, THE DATES THEY PLAY, THE VENUE THEY WILL PLAY AT, 
THE NUMBER OF ATTENDEES, AND THE VENUE CAPACITY. FOR THIS VIEW ALSO CREATE A COLUMN THAT BEST DESCRIBES 
WHAT PERCENTAGE OF THE VENUE CAPACITY WAS UTILIZED */

CREATE VIEW vw_giginfo
AS 
SELECT B.BANDNAME, G.GIGDATE, V.VNAME AS VENUE, G.NUMATTENDEES, V.SEATS AS 'VENUE CAPACITY', G.NUMATTENDEES/V.SEATS AS '% UTILIZED'
FROM VENUE V
INNER JOIN GIG G ON V.IDVENUE = G.IDVENUE
INNER JOIN BAND B ON G.IDBAND = B.IDBAND
ORDER BY B.BANDNAME;

SELECT * FROM vw_giginfo

-- PART 4 TASK 1
-- CREATE A STORED PROCEDURE THAT LISTS ALL OF THE VENUES THAT CAN HANDLE MORE THAN 10,000 GUESTS

DELIMITER $
CREATE PROCEDURE SP_GETSEATS()
BEGIN 	
     SELECT VNAME, SEATS
     FROM VENUE
     WHERE SEATS > 10000
     ORDER BY VNAME;
END $


CALL SP_GETSEATS()

DROP PROCEDURE SP_GETSEATS;

-- TASK 2
/* CREATE A PROCEDURE THAT LISTS ALL OF THE PLAYERS THAT COME FROM A SPECIFIC STATE. 
WE WANT TO SEE (ONCE WE RUN THIS STORED PROCEDURE), WHAT BANDS THEY ARE A PART OF,
THEIR FULL NAME (IN ONE COLUMN), AND THE STATE THEY ARE FROM.*/

DELIMITER $
CREATE PROCEDURE SP_GETPLAYERSINFO()
BEGIN 	
     SELECT B.BANDNAME, CONCAT(P.PFNAME, ' ',P.PLNAME) AS 'PLAYER NAME', P.HOMESTATE
     FROM PLAYER P 
     INNER JOIN BAND B ON P.IDBAND = B.IDBAND
     ORDER BY P.HOMESTATE;
END $


CALL SP_GETPLAYERSINFO()
DROP PROCEDURE SP_GETPLAYERSINFO;

-- the correct answer

DELIMITER $
CREATE PROCEDURE SP_GETPLAYERSINFO(in state char(99))
BEGIN 	
     SELECT B.BANDNAME, CONCAT(P.PFNAME, ' ',P.PLNAME) AS 'PLAYER NAME', P.HOMESTATE as state
     FROM PLAYER P 
     INNER JOIN BAND B ON P.IDBAND = B.IDBAND
     WHERE P.HOMESTATE = STATE;
END $


CALL SP_GETPLAYERSINFO('NEW JERSEY')
DROP PROCEDURE SP_GETPLAYERSINFO;
